name: Build-Scan-Push

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  # Authenticate with Aqua Registry - optional if Aqua Scanner is pushed to local private registry
  AQUA_USER: ${{ secrets.AQUA_USER }} # Aqua Registry
  AQUA_PASSWORD: ${{ secrets.AQUA_PASSWORD }} # Aqua Registry

  # Authenticate the Aqua Scanner with Aqua Server 
  AQUA_SCANNER_USER: ${{ secrets.AQUA_SCANNER_USER }} # Aqua Image Scanner authentication
  AQUA_SCANNER_PASSWORD: ${{ secrets.AQUA_SCANNER_PASSWORD }} # Aqua Image Scanner authentication
  AQUA_SERVER_URL: ${{ secrets.AQUA_SERVER_URL }} # Aqua Image Scanner authentication

  # Authenticate with local/private registry. Can be ECR/ACR/GCR etc. 
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }} # Docker Registry authentication
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }} # Docker Registry authentication

  BuildNumber: ${{ github.run_id }}-${{ github.run_number }}
  ImageName: 'stalibali/stalibali/clockbox'

jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v4

    - name: Build Docker image
      uses: docker/build-push-action@v5
      with:
        # Username used to log in to a Docker registry. If not set then no login will occur
        username: ${{ secrets.DOCKER_USERNAME }}  
        # Password or personal access token used to log in to a Docker registry. If not set then no login will occur
        password: ${{ secrets.DOCKER_PASSWORD }}
        # Docker repository to tag the image with
        repository: ${{ env.ImageName }}
        # Comma-delimited list of tags. These will be added to the registry/repository to form the image's tags
        tags: 'github-${{ env.BuildNumber }}'
        # Path to the build context
        # path: 'src'
        # Path to the Dockerfile (Default is '{path}/Dockerfile')
        dockerfile: './Dockerfile'
        # Whether to push the image
        push: false
        
    - name: Aqua Image Scanner - Scan Embedded Image and Register to Aqua Console # Note the --registry and --register-compliant command 
      run: |
        docker image ls
        
    - name: Push Docker image
      uses: docker/build-push-action@v5
      with:
        # Username used to log in to a Docker registry. If not set then no login will occur
        username: ${{ secrets.DOCKER_USERNAME }}
        # Password or personal access token used to log in to a Docker registry. If not set then no login will occur
        password: ${{ secrets.DOCKER_PASSWORD }}
        # Docker repository to tag the image with
        repository: ${{ env.ImageName }}
        # Comma-delimited list of tags. These will be added to the registry/repository to form the image's tags
        tags: 'github-${{ env.BuildNumber }}'
        # Path to the build context
        # path: 'src'
        # Path to the Dockerfile (Default is '{path}/Dockerfile')
        dockerfile: './Dockerfile'
        # Whether to push the image
        push: true

    - uses: actions/upload-artifact@v3
      with:
        name: aqua-artifact
        path: out.*
