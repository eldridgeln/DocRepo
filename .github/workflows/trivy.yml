name: Trivy Scanner CI
on:
  push:
    branches:
      - main
env:
  # Authenticate with local/private registry. Can be ECR/ACR/GCR etc. 
  DOCKER_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }} # Docker Registry authentication
  DOCKER_PASSWORD: ${{ secrets.DOCKERHUB_TOKEN }} # Docker Registry authentication

  # Authenticate with Aqua Registry - optional if Aqua Scanner is pushed to local private registry
  AQUA_USER: ${{ secrets.AQUA_USER }} # Aqua Registry
  AQUA_PASSWORD: ${{ secrets.AQUA_PASSWORD }} # Aqua Registry

  # Authenticate the Aqua Scanner with Aqua Server 
  AQUA_SCANNER_USER: ${{ secrets.AQUA_SCANNER_USER }} # Aqua Image Scanner authentication
  AQUA_SCANNER_PASSWORD: ${{ secrets.AQUA_SCANNER_PASSWORD }} # Aqua Image Scanner authentication
  AQUA_SERVER_URL: ${{ secrets.AQUA_SERVER_URL }} # Aqua Image Scanner authentication
  GITHUB_WORKSPACE: ${{ github.workspace }}
  DST_IMAGE:  ${{ secrets.DOCKERHUB_USERNAME }}/clockbox:${{ github.sha }}
  
jobs:
  build:
    name: Build
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          
      -  name: Build an image from Dockerfile
         uses: docker/build-push-action@v5
         with:
          context: .
          file: ./Dockerfile-1
          push: false
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/clockbox:${{ github.sha }}

    #  - name: Run Trivy vulnerability scanner
    #    uses: aquasecurity/trivy-action@master
    #    with:
    #      image-ref: 'docker.io/stalibali/clockbox:${{ github.sha }}'
    #      scan-type: image
    #      format: 'table'
    #      # output: 'dependency-results.sbom.json'
    #      # exit-code: '1'
    #      ignore-unfixed: true
    #      vuln-type: 'os,library'
    #      scanners: 'vuln,secret,config'
    #      severity: "LOW,MEDIUM,HIGH,CRITICAL"
    # docker run --rm -v $GITHUB_WORKSPACE:/tmp -v /var/run/docker.sock:/var/run/docker.sock -e BUILD_NUMBER=$BUILD_NUMBER -e BUILD_JOB_NAME=$BUILD_NAME registry.aquasec.com/scanner:2022.4 scan -w /tmp --host $AQUA_SERVER_URL --user $AQUA_SCANNER_USER --password $AQUA_SCANNER_PASSWORD --show-negligible --local $DST_IMAGE --htmlfile /tmp/out.html --jsonfile /tmp/out.json --register-compliant --registry "My_Registry" > /dev/null


      - name: Aqua Image Scanner
        run: |
         docker image ls
         docker login registry.aquasec.com -u $AQUA_USER -p $AQUA_PASSWORD
         docker pull registry.aquasec.com/scanner:2022.4
         docker run --rm v $GITHUB_WORKSPACE:/tmp -v /var/run/docker.sock:/var/run/docker.sock registry.aquasec.com/scanner:2022.4 scan -w /tmp --host $AQUA_SERVER_URL --user $AQUA_SCANNER_USER --password $AQUA_SCANNER_PASSWORD --show-negligible --local $DST_IMAGE --htmlfile /tmp/out.html --jsonfile /tmp/out.json --register-compliant --registry "Docker Hub"
        # exit-code: '1'
         
      - name: Push an image after scanning from Dockerfile
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile-1
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/clockbox:${{ github.sha }}

      - name: Upload trivy report as a Github artifact
        uses: actions/upload-artifact@v4
        with:
          name: trivy-sbom-report
          path: '${{ github.workspace }}/dependency-results.sbom.json'
          retention-days: 1 # 90 is the default
      
      - uses: actions/upload-artifact@v3
        with:
         name: aqua-artifact
         path: out.*
