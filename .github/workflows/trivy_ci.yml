name: Trivy CI build-scan-push

on:
  push:
    branches: [ "main" ]

env:
  # Authenticate with Aqua Registry - optional if Aqua Scanner is pushed to local private registry
  AQUA_USER: ${{ secrets.AQUA_USER }} # Aqua Registry
  AQUA_PASSWORD: ${{ secrets.AQUA_PASSWORD }} # Aqua Registry

  # Authenticate the Aqua Scanner with Aqua Server 
  AQUA_SCANNER_USER: ${{ secrets.AQUA_SCANNER_USER }} # Aqua Image Scanner authentication
  AQUA_SCANNER_PASSWORD: ${{ secrets.AQUA_SCANNER_PASSWORD }} # Aqua Image Scanner authentication
  AQUA_SERVER_URL: ${{ secrets.AQUA_SERVER_URL }} # Aqua Image Scanner authentication

  # Authenticate with local/private registry. Can be ECR/ACR/GCR etc. 
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }} # Docker Registry authentication
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }} # Docker Registry authentication

  # Env Var for the generic purposes
  BUILD_NUMBER: ${{ github.run_id }}-${{ github.run_number }}
  BUILD_NAME: ${{ github.repository }}
  GITHUB_WORKSPACE: ${{ github.workspace }}
  #SRC_IMAGE: stanhoe/spring4shell:latest # Source image name 
  DST_IMAGE: stalibali/container-scanning
  FINAL_IMAGE: ${{ env.DST_IMAGE }}:github-${{ env.BUILD_NUMBER }}

jobs:       
  build:
    name: Build Image, Scan Image, and Push Image
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
    -
        name: Build
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile-1
          push: false
                    
    - 
      name: Trivy Scan - Unknown, Low and Medium Severity
      uses: aquasecurity/trivy-action@0.0.7
      with:
        # image reference
        image-ref: ${{ env.ImageName }}:github-${{ env.BuildNumber }}
        # exit code when vulnerabilities were found
        exit-code: 0
        # severities of vulnerabilities to be displayed
        severity: UNKNOWN,LOW,MEDIUM
        
    - 
      name: Trivy Scan - High and Critical Severity
      uses: aquasecurity/trivy-action@0.0.7
      with:
        # image reference
        image-ref: ${{ env.ImageName }}:github-${{ env.BuildNumber }}
        # exit code when vulnerabilities were found
        exit-code: 1
        # severities of vulnerabilities to be displayed
        severity: HIGH,CRITICAL
        
    - name: Push Scanned Embedded image to Local/Private Container Registry
      run: |
        docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
        docker push $FINAL_IMAGE 
      
    - uses: actions/upload-artifact@v3
      with:
        name: aqua-artifact
        path: out.*
